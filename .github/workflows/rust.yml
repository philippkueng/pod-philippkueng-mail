name: Rust

on:
  push:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install build-essential libssl-dev musl-dev musl-tools -y
    - name: Build openssl
      run: |
        sudo ln -s /usr/include/x86_64-linux-gnu/asm /usr/include/x86_64-linux-musl/asm
        sudo ln -s /usr/include/asm-generic /usr/include/x86_64-linux-musl/asm-generic
        sudo ln -s /usr/include/linux /usr/include/x86_64-linux-musl/linux
        sudo mkdir /musl 
        wget https://github.com/openssl/openssl/archive/OpenSSL_1_1_1f.tar.gz
        tar zxvf OpenSSL_1_1_1f.tar.gz
        cd openssl-OpenSSL_1_1_1f/
        CC="musl-gcc -fPIE -pie" ./Configure no-shared no-async --prefix=/musl --openssldir=/musl/ssl linux-x86_64
        make depend
        make -j$(nproc)
        sudo make install
        
    - name: rustup toolchain install
      # You may pin to the exact commit or the version.
      # uses: dtolnay/rust-toolchain@1ce4a7352a1efe5dede2e52c75512b34256e4f44
      uses: dtolnay/rust-toolchain@v1
      with:
        # Rust toolchain specification -- see https://rust-lang.github.io/rustup/concepts/toolchains.html#toolchain-specification
        toolchain: stable
        # Target triple to install for this toolchain
        target: x86_64-unknown-linux-musl
        # Comma-separated list of components to be additionally installed
        # components: # optional
        
    - name: Create a release build
      run: cargo build --release --target=x86_64-unknown-linux-musl
      env:
        PKG_CONFIG_SYSROOT_DIR: "/"
        PKG_CONFIG_ALLOW_CROSS: 1
        OPENSSL_STATIC: true
        OPENSSL_DIR: "/musl"
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.0
      with:
        path: target
        if-no-files-found: error
